System Administration Commands             distro_const(8)

NAME
     distro_const - Utility for creating distribution 
     images and media

SYNOPSIS
     /usr/bin/distro_const

     distro_const build [-R] [-r <step>] [-p <step>] [-l]
     <manifest>

DESCRIPTION

    The distro_const command enables users to create an 
    image, by using a specified manifest file as the 
    blueprint for the image.

    You can create an ISO image that is comparable to the 
    live CD image that's distributed as the OpenIndiana
    operating system. 

    You can create a SPARC AI ISO image that can be 
    used for network installations of the OpenIndiana OS 
    on SPARC clients, or an x86 AI ISO image that can 
    be used for network installations of the OpenIndiana
    OS on x86 clients.

    You can, also, create a text installer image that can
    be used to install the OpenIndiana OS on either 
    x86 or SPARC systems.

    Or, you can create a custom ISO image.

    See the OpenIndiana Distribution Constructor Guide at
    https://docs.openindiana.org/dev/distribution-constructor
    for complete instructions.

    The basic distro_const command with no options creates 
    a full image in one step.

    The command options enable users to pause and resume 
    the image-creation process at various "checkpoints," 
    thus enabling users to review status of the image and 
    to check for bugs at each stage.

    Checkpointing saves time during builds by allowing you  
    to bypass lengthy steps which have already been done 
    at least once.  As an example, consider that im-pop, 
    an initial step which downloads packages, can take a 
    long time. With checkpointing, this step can be skipped
    after the first iteration, by resuming builds from 
    subsequent steps.

    The distro_const command can only be run as root.

SUBCOMMAND AND OPTIONS

    The distro_const command has the subcommand and
    options listed below. Also see EXAMPLES below.

    
    build 

          distro_const build <manifest>

          The subcommand, "build", is required.
        
          Creates a full image, using the specified 
          manifest file as the blueprint for 
          that image. The manifest name is required. 

    
    -l   distro_const build [-l] <manifest>

         Lists valid steps at which you can choose to 
         pause or resume building an image. This command 
         option queries the manifest file for valid steps.
         Use the step names provided by this command as 
         valid values for the other checkpointing command
         options. The build subcommand is required.

         The step values depend on entries in the manifest
         file.

    
    -p   distro_const build [-p <step>] <manifest>

         Builds an image, but pauses building the image at
         the specified step name. Use the -l option to 
         check valid step names. The step names and 
         manifest name are required. The build subcommand 
         is required.

    
    -R   distro_const build [-R] <manifest>

         Resumes building the image from the last step
         executed. The manifest name and the build
         subcommand are required.

    
    -r   distro_const build [-r <step>] <manifest>

         Resumes building the image from the specified 
         step name. The specified step name must be either 
         the step at which the previous build stopped 
         executing, or an earlier step. A later step is not 
         valid. The step names are listed by running the 
         -l option. The step name and manifest name are 
         required. The build subcommand is required.

    
    -h   distro_const [-h]

         Displays command usage.

EXAMPLES

    Example 1: Create an Image Using Checkpoint Options

    1. Check which checkpoints are available. The 
       manifest name is slim_cd_x86.xml.

       # distro_const build -l slim_cd_x86.xml

       The valid step names are displayed, as in this 
       sample output.

    step           Resumable  Description
    ---------------------------------------
    im-pop         X Populate the image with packages
    im-mod         X Image area modifications
    slim-im-mod    X Slim CD Image area Modifications
    br-init        X Boot root initialization
    slim-br-config X Slim CD boot root configuration
    br-config      X Boot root configuration
    br-arch        X Boot root archiving
    slim-post-mod  X Slim CD post bootroot image
                     area modification
    grub-setup     X Grub menu setup
    post-mod       X Post bootroot image area
                     modification
    gen-slim-cont  X Generate Slim CD image content list
    iso              ISO image creation
    usb              USB image creation

       This example shows that the build can be resumed 
       from all checkpoints except the last two.

    2. Start building the image and pause before
       modifying the image area in step slim-im-mod.

       # distro_const build -p slim-im-mod \ 
       slim_cd_x86.xml

    3. Restart the build at the step for modifying the
       image area in step slim-im-mod. Finish creating
       the image.

       # distro_const build -r slim-im-mod \
       slim_cd_x86.xml

    

    Example 2: Create an Image in One Step

       To run a complete build of an image without pausing, 
       use the basic distro_const command without 
       checkpointing options. The manifest file name is 
       slim_cd_x86.xml.

       # distro_const build slim_cd_x86.xml


ATTRIBUTES

    /usr/bin/distro_const
    /usr/share/man/man8/distro_const.8

    ATTRIBUTE TYPE        ATTRIBUTE VALUE

    Availability          distribution-constructor

    Interface Stability   In Development

SEE ALSO
   
    OpenSolaris Distribution Constructor Guide
    at http://docs.sun.com
    
    
OpenIndiana Last Changed December 9, 2024
